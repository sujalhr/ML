import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.pipeline import make_pipeline
from sklearn.preprocessing import PolynomialFeatures, StandardScaler
from sklearn.metrics import mean_squared_error

# --- Linear Regression: Boston Housing ---
boston = pd.read_csv('Boston_housing_dataset.csv')
X_boston, y_boston = boston[['RM']].values, boston['MEDV'].values
X_train, X_test, y_train, y_test = train_test_split(X_boston, y_boston, test_size=0.2, random_state=42)

model_lin = LinearRegression().fit(X_train, y_train)
y_pred = model_lin.predict(X_test)

plt.figure(figsize=(10, 5))
plt.scatter(X_test, y_test, c='blue', label='Actual')
plt.plot(X_test, y_pred, 'r-', lw=2, label='Predicted')
plt.xlabel('Average Number of Rooms (RM)'), plt.ylabel('Housing Price')
plt.title('Linear Regression on Boston Housing'), plt.legend(), plt.show()
print(f"Linear MSE: {mean_squared_error(y_test, y_pred):.3f}")

# --- Polynomial Regression: Auto MPG ---
auto = pd.read_csv('auto_mpg.csv', na_values='?').dropna()
X_auto, y_auto = auto[['horsepower']].astype(float).values, auto['mpg'].values
X_train, X_test, y_train, y_test = train_test_split(X_auto, y_auto, test_size=0.2, random_state=42)

model_poly = make_pipeline(PolynomialFeatures(3), StandardScaler(), LinearRegression()).fit(X_train, y_train)
y_poly_pred = model_poly.predict(X_test)

sorted_X, sorted_y = zip(*sorted(zip(X_test.flatten(), y_poly_pred)))
plt.figure(figsize=(10, 5))
plt.scatter(X_test, y_test, c='blue', label='Actual')
plt.plot(sorted_X, sorted_y, 'r-', lw=2, label='Predicted')
plt.xlabel('Horsepower'), plt.ylabel('MPG')
plt.title('Polynomial Regression on Auto MPG'), plt.legend(), plt.show()
print(f"Poly MSE: {mean_squared_error(y_test, y_poly_pred):.3f}")
