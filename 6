import pandas as pd
import seaborn as sns
import numpy as np
import matplotlib.pyplot as plt
from sklearn.preprocessing import StandardScaler
import warnings
warnings.filterwarnings("ignore")

data = sns.load_dataset("tips").drop_duplicates()

X = StandardScaler().fit_transform(data[["total_bill"]])
y = data["tip"].values

def lwr(X_train, y_train, X_test, tau):
    y_pred = []
    X_b = np.c_[np.ones_like(X_train), X_train]
    for x in X_test:
        w = np.exp(-np.sum((X_train - x)**2, axis=1) / (2 * tau**2))
        W = np.diag(w)
        theta = np.linalg.pinv(X_b.T @ W @ X_b) @ (X_b.T @ W @ y_train)
        y_pred.append(np.r_[1, x] @ theta)
    return np.array(y_pred)

X_test = np.linspace(X.min(), X.max(), 100).reshape(-1, 1)
y_pred = lwr(X, y, X_test, tau=0.5)

plt.scatter(X, y, alpha=0.6)
plt.plot(X_test, y_pred, color='red', linewidth=2)
plt.xlabel("Total Bill (Standardized)")
plt.ylabel("Tip")
plt.title("Locally Weighted Regression (LWR)")
plt.legend(["Data","LWR Fit"])
plt.show()
